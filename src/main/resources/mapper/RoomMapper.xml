<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.bumblebee.dao.RoomMapper">
  <resultMap id="BaseResultMap" type="org.bumblebee.entity.Room">
    <id column="room_id" jdbcType="INTEGER" property="roomId" />
    <result column="room_name" jdbcType="VARCHAR" property="roomName" />
    <result column="room_state" jdbcType="VARCHAR" property="roomState" />
    <result column="room_create_id" jdbcType="INTEGER" property="roomCreateId" />
    <result column="room_create_time" jdbcType="TIMESTAMP" property="roomCreateTime" />
    <result column="room_limit" jdbcType="INTEGER" property="roomLimit" />
    <result column="room_password" jdbcType="VARCHAR" property="roomPassword" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    room_id, room_name, room_state, room_create_id, room_create_time, room_limit, room_password
  </sql>
  <select id="selectByExample" parameterType="org.bumblebee.entity.RoomExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from room
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from room
    where room_id = #{roomId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from room
    where room_id = #{roomId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="org.bumblebee.entity.Room">
    insert into room (room_id, room_name, room_state, 
      room_create_id, room_create_time, room_limit, 
      room_password)
    values (#{roomId,jdbcType=INTEGER}, #{roomName,jdbcType=VARCHAR}, #{roomState,jdbcType=VARCHAR}, 
      #{roomCreateId,jdbcType=INTEGER}, #{roomCreateTime,jdbcType=TIMESTAMP}, #{roomLimit,jdbcType=INTEGER}, 
      #{roomPassword,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.bumblebee.entity.Room">
    insert into room
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roomId != null">
        room_id,
      </if>
      <if test="roomName != null">
        room_name,
      </if>
      <if test="roomState != null">
        room_state,
      </if>
      <if test="roomCreateId != null">
        room_create_id,
      </if>
      <if test="roomCreateTime != null">
        room_create_time,
      </if>
      <if test="roomLimit != null">
        room_limit,
      </if>
      <if test="roomPassword != null">
        room_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roomId != null">
        #{roomId,jdbcType=INTEGER},
      </if>
      <if test="roomName != null">
        #{roomName,jdbcType=VARCHAR},
      </if>
      <if test="roomState != null">
        #{roomState,jdbcType=VARCHAR},
      </if>
      <if test="roomCreateId != null">
        #{roomCreateId,jdbcType=INTEGER},
      </if>
      <if test="roomCreateTime != null">
        #{roomCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roomLimit != null">
        #{roomLimit,jdbcType=INTEGER},
      </if>
      <if test="roomPassword != null">
        #{roomPassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.bumblebee.entity.Room">
    update room
    <set>
      <if test="roomName != null">
        room_name = #{roomName,jdbcType=VARCHAR},
      </if>
      <if test="roomState != null">
        room_state = #{roomState,jdbcType=VARCHAR},
      </if>
      <if test="roomCreateId != null">
        room_create_id = #{roomCreateId,jdbcType=INTEGER},
      </if>
      <if test="roomCreateTime != null">
        room_create_time = #{roomCreateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="roomLimit != null">
        room_limit = #{roomLimit,jdbcType=INTEGER},
      </if>
      <if test="roomPassword != null">
        room_password = #{roomPassword,jdbcType=VARCHAR},
      </if>
    </set>
    where room_id = #{roomId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.bumblebee.entity.Room">
    update room
    set room_name = #{roomName,jdbcType=VARCHAR},
      room_state = #{roomState,jdbcType=VARCHAR},
      room_create_id = #{roomCreateId,jdbcType=INTEGER},
      room_create_time = #{roomCreateTime,jdbcType=TIMESTAMP},
      room_limit = #{roomLimit,jdbcType=INTEGER},
      room_password = #{roomPassword,jdbcType=VARCHAR}
    where room_id = #{roomId,jdbcType=INTEGER}
  </update>
</mapper>